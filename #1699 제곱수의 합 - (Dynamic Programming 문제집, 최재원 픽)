/*
2016.8.16
서성준
알고리즘 연습문제 - Dynamic Programming
#1699 제곱수의 합 - (Dynamic Programming 문제집, 최재원 픽)
*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;



int main() {
	int dp[100001] = { -1, };
	int n;
	cin >> n;
	//dp는 문제의 해답을 저장해놓는 배열, ks는 제곱수를 저장해놓는 배열이다.
	vector<int> ks;
	
	dp[0] = 0;
	dp[1] = 1;
	int k=1,index=0,minimum,it;
	//1~316숫자들을 제곱하여 ks에 저장해놓는다.
	for (int i = 1; i < 318; i++) {
		ks.push_back(i*i);
	}
	for (int i = 2; i < 100001; i++) {
		if (ks[index + 1] == i)
			index++;
		minimum = 987654321;
		for (int j = index; j >= 0; j--) {
			/*if (j >= 0)*/
				minimum = min(minimum, 1 + dp[i - ks[j]]);
		}
		dp[i] = minimum;
		if (i == n) {
			cout << dp[i];
			return 0;
		}
	}	
	cout << dp[n];
	return 0;
}
